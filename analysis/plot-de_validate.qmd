---
title: "Validate results of Differential expression analysis for whole hypothalamus evaluation datasets"
author: "Evgenii O. Tretiakov"
date: "`r Sys.Date()`"
format:
  html:
    toc: true
    df-print: paged
    code-fold: true
    fig-width: 9
    fig-height: 12
    fig-format: retina
    fig-responsive: true
    fig-dpi: 200
execute:
  keep-md: false
  echo: true
  error: false
  message: false
  warning: false
  debug: false
knitr:
  opts_chunk:
    autodep: true
    fig.align: center
    fig.retina: 2
    fig.width: 14
    fig.height: 12
---

```{r setup, include = FALSE}
DOCNAME <- "validate-de-results-astrocytes-between-regions-on-evaluation-datasets"
NOW <- Sys.time()

# Time chunks during knitting
knitr::knit_hooks$set(timeit = function(before) {
  if (before) {
    print(paste("Start:", Sys.time()))
    NOW <<- Sys.time()
  } else {
    print(paste("Stop:", Sys.time()))
    print(Sys.time() - NOW)
  }
})

knitr::knit_hooks$set(debug = function(before, options, envir) {
  if (!before) {
    message(
      paste(names(envir), as.list(envir),
        sep = " = ", collapse = "\n"
      )
    )
  }
})

knitr::opts_chunk$set(
  cache          = FALSE,
  dev            = c("png", "pdf"),
  timeit         = TRUE
)
```

## Load data and setup parameters

```{r libraries, cache=FALSE}
# Load tidyverse infrastructure packages
suppressPackageStartupMessages({
  library(future)
  library(here)
  library(tidyverse)
  library(magrittr)
  library(stringr)
  library(skimr)
  library(RColorBrewer)
  library(viridis)
})


# Load packages for scRNA-seq analysis and visualisation
suppressPackageStartupMessages({
  library(ggplot2)
  library(cowplot)
  library(patchwork)
  library(ggstatsplot)
  library(harmony)
  library(Seurat)
  library(SeuratDisk)
  library(SeuratWrappers)
  library(schex)
  library(scCustomize)
  library(swne)
})
```

### Set paths

```{r paths}
src_dir <- here("code")
data_dir <- here("data")
output_dir <- here("output")
plots_dir <- here(output_dir, "figures/")
tables_dir <- here(output_dir, "tables/")
```

### Load helper functions and gene-sets

```{r source, cache = FALSE}
source(here(src_dir, "genes.R"))
source(here(src_dir, "functions.R"))
```

### Set fixed variables

```{r params-computation, cache = FALSE}
# set seed
reseed <- 42
set.seed(seed = reseed)

# Parameters for parallel execution
n_cores <- 8
plan("multisession", workers = n_cores)
options(
  future.globals.maxSize = 1999999 * 1024^2,
  future.rng.onMisuse = "ignore"
)
plan()


# ggplot2 theme
theme_set(ggmin::theme_powerpoint())
```

```{r params}
bioproject <- "whole_hypothalamus_astrocytes_evaluation_datasets"
cb_fpr <- 0.001
connectivity_model <- "min_tree"
k <- 10
metric <- "euclidean"
signature <- 100
```

## Load predicted astrocytes data

```{r load-seurat}
srt <- list()
PRJNA547712_path <- here(
  data_dir,
  sprintf("data/data/resolved_subregions_by_microclusters/best_xgboost-subregional_PRJNA547712-astrocytes_dataset-msp_%s-metric_%s-k_%s-sign_%s-amb_%s.h5Seurat", connectivity_model, metric, k, signature, cb_fpr)
)
PRJNA548917_path <- here(
  data_dir,
  sprintf("data/data/resolved_subregions_by_microclusters/best_xgboost-subregional_PRJNA548917-astrocytes_dataset-msp_%s-metric_%s-k_%s-sign_%s-amb_%s.h5Seurat", connectivity_model, metric, k, signature, cb_fpr)
)
PRJNA779749_path <- here(
  data_dir,
  sprintf("data/data/resolved_subregions_by_microclusters/best_xgboost-subregional_PRJNA779749-astrocytes_dataset-msp_%s-metric_%s-k_%s-sign_%s-amb_%s.h5Seurat", connectivity_model, metric, k, signature, cb_fpr)
)
PRJNA438862_path <- here(
  data_dir,
  sprintf("data/data/resolved_subregions_by_microclusters/best_xgboost-subregional_PRJNA438862-astrocytes_dataset-msp_%s-metric_%s-k_%s-sign_%s-amb_%s.h5Seurat", connectivity_model, metric, k, signature, cb_fpr)
)
srt[["PRJNA547712"]] <- LoadH5Seurat(file = PRJNA547712_path)
srt[["PRJNA548917"]] <- LoadH5Seurat(file = PRJNA548917_path)
srt[["PRJNA779749"]] <- LoadH5Seurat(file = PRJNA779749_path)
srt[["PRJNA438862"]] <- LoadH5Seurat(file = PRJNA438862_path)
srt <- merge(srt[["PRJNA547712"]], y = c(srt[["PRJNA548917"]], srt[["PRJNA779749"]], srt[["PRJNA438862"]]), project = "whole_hypothalamus")
print(srt)
invisible(gc())
```


```{r scale-data}
all.genes <- rownames(srt)
srt <- NormalizeData(srt) %>%
  FindVariableFeatures(selection.method = "vst", nfeatures = 5000) %>%
  ScaleData(features = all.genes) %>%
  RunPCA(verbose = FALSE)
srt <- RunHarmony(srt, group.by.vars = "project")
srt <- RunUMAP(srt, reduction = "harmony", dims = 1:30)
selected_genes <- c(
  "Insr", "Meis1", "Igf1r", "Nrf1", "Prlr", "Camk1d", "Lars2", "Cacna2d3", # 0 ARC
  "Dcn", "Ptgds", "Nupr1", "Igfbp2", "Nrarp", "Ctnna2", "Ldlr", "Mmp14", # 1 LHA
  "Nkx6-2", "Cirbp", "Selenop", # 2 MnPO
  "Foxg1", "Crym", "Sema3c", "Meis2", "Dbp", "Drd1", "Drd2", "Drd3", "Drd4", "Drd5", # 3 POA
  "Egr1", "Ttr", "Btg2", "Mbnl3", "Pgf", "Irs4", "Gpr101", "Nr3c2", "Agtr1", # 4 PVN
  "Rfx4", "Dbx2", "Prokr2", "Cebpb", "Zic1", "Zic2", "Ccn1", "Gata4", "Klf10", # 5 SCN
  "Tbx3", "Fis1", "Ndn", "Psmc5", "Drap1", "Pcsk1n", "Rtn1", # 6 VMH
  "Emx2", "Sgip1", "Myoc", "Hivep3", "Dcc", "Ltbp1", "Egfem1", # 7 VPH
  "Klf4", "Atf3", "Nrg1", "Cdk8", "Qrfpr", "Hcrtr1", "Hcrtr2", "Tacr1", "Trhr", "Tshr",
  "Gfap", "Fgf1", "Fgfr3", "Hepacam", "Hif1", "Htra1", "Lxn", "Ndrg2", "Ntn1", "Nfia", "Slit2", "Aqp4", "S100a1", "S100a6", "S100b", "Slc1a2", "Slc1a3", "Slc38a1", "Vegfa", "Fos", "Fosb", "Jun", "Junb", "Jund", "Ier2", "Socs3", "Pde10a", "Fbln5"
)
selected_genes <- selected_genes[selected_genes %in% all.genes]
```


```{r save-markers-featureplots-at_genes}
srt <- Store_Palette_Seurat(seurat_object = srt, palette = c("#ffff00", "#fae200", "#f4c500", "#eeab00", "#e99500", "#e37f00", "#dd6b00", "#d75b00", "#d04c00", "#c93e00", "#c33300", "#bc2800", "#b42003", "#ad1941", "#a41281", "#9c0db7", "#9309dd", "#8906f7", "#7f04ff", "#7402f6", "#6701db", "#5900b0", "#49007e", "#32003e", "#000000"), palette_name = "expr_Colour_Palette_gnuplot_rette_gnuplot_r")

colours_code <- c(
  "0" = "grey30",
  "1" = "blue",
  "2" = "skyblue",
  "3" = "forestgreen",
  "4" = "greenyellow",
  "5" = "yellow",
  "6" = "orangered",
  "7" = "grey70"
)

DimPlot_scCustom(seurat_object = srt, group.by = "project", repel = TRUE)
DimPlot_scCustom(seurat_object = srt, group.by = "predict_xgboost_subregion", repel = TRUE)
Iterate_FeaturePlot_scCustom(
  seurat_object = srt,
  gene_list = selected_genes,
  reduction = "umap",
  na_cutoff = NA,
  pt.size = 4,
  order = TRUE,
  alpha_na_exp = 0.1,
  alpha_exp = 0.75,
  single_pdf = FALSE,
  file_path = plots_dir,
  file_type = ".pdf",
  file_name = sprintf("%s_selected_umap", bioproject),
  colors_use = srt@misc$expr_Colour_Palette_gnuplot_r
)
```


```{r save-markers-featureplots-at_genes-split, fig.width=14, fig.height=3}
DimPlot_scCustom(seurat_object = srt, group.by = "predict_xgboost_subregion", split.by = "project", num_columns = 4, repel = TRUE)
Iterate_FeaturePlot_scCustom(
  seurat_object = srt,
  gene_list = selected_genes,
  reduction = "umap",
  split.by = "project",
  ncol = 4,
  na_cutoff = NA,
  pt.size = 2,
  order = TRUE,
  alpha_na_exp = 0.1,
  alpha_exp = 0.75,
  single_pdf = FALSE,
  file_path = plots_dir,
  file_type = ".pdf",
  file_name = sprintf("%s_selected_umap_split", bioproject),
  colors_use = srt@misc$expr_Colour_Palette_gnuplot_r
)
```

```{r plot-hexbin}
srt <- make_hexbin(
  srt,
  nbins = 49,
  dimension_reduction = "umap",
  use_dims = c(1, 2)
)

plot_hexbin_density(srt) + ggsci::scale_fill_material("amber")

plot_hexbin_meta(
  srt,
  col = "predict_xgboost_subregion",
  action = "majority",
  colors = colours_code
)

plot_hexbin_meta(
  srt,
  col = "project",
  action = "majority",
  colors = colours_code
)
```

```{r plot-hexbin-genes}
plot_custom_median_hex <- function(gene_id) {
  plot_hexbin_feature_plus(srt,
    col = "predict_xgboost_subregion",
    colors = colours_code,
    feature = gene_id,
    mod = "RNA",
    type = "data",
    action = "median",
    xlab = "XGBoost_densMAP_1", ylab = "XGBoost_densMAP_2",
    title = sprintf("Median of mRNA expression of %s in logarithmic scale", gene_id),
  ) + scale_fill_gradientn(
    colors = srt@misc$expr_Colour_Palette_gnuplot_r,
    na.value = "white"
  )
}

plot_custom_mean_hex <- function(gene_id) {
  plot_hexbin_feature_plus(srt,
    col = "predict_xgboost_subregion",
    colors = colours_code,
    feature = gene_id,
    mod = "RNA",
    type = "data",
    action = "mean",
    xlab = "XGBoost_densMAP_1", ylab = "XGBoost_densMAP_2",
    title = sprintf("Mean of mRNA expression of %s in logarithmic scale", gene_id),
  ) + scale_fill_gradientn(
    colors = srt@misc$expr_Colour_Palette_gnuplot_r,
    na.value = "white"
  )
}

map(selected_genes[selected_genes %in% rownames(GetAssayData(object = srt, slot = "data"))], plot_custom_median_hex)
map(selected_genes[selected_genes %in% rownames(GetAssayData(object = srt, slot = "data"))], plot_custom_mean_hex)
```


## Session information

```{r session-info, cache = FALSE}
sI <- sessioninfo::session_info()
sI$loadedOnly <- NULL
print(sI, locale = FALSE)
```